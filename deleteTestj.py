listA = [3,4,7,8]
list1 = [1,2,3,4,5,6,7,8,9]

for i in list1:
    if i in listA:
        list1.remove(i)

print("list1:",list1) # [1, 2, 4, 5, 6, 8, 9]

# 결과는 [1,2,5,6,9] 가 아닌 [1,2,4,5,6,8,9]가 나온다!!
# 나혼자의 생각이지만, list.remove를 하는순간, 리스트의 인덱스에대한 값의 할당이 한칸씩 땡겨지는 효과가 있어서 이런 결과가 나오나봄.
# (특정인덱스에서 값을 삭제햇으면 그 인덱스는 텅빈공간을 가리키는게 아니고 다음값을 가리키도록 바뀌는 뭐 그런식으로되는듯? 그래서 리스트에서 어떤 값을 삭제하는순간 그 인덱스 및 그 이후의 인덱스들이 가리키는값은 전부 하나씩 뒤로 밀리나봄?)

# 참고로, list대신 set에서 존재여부 찾는게 속도 훨 빠르다(지금 위의 코드에선 걍 list내에서 존재여부 검색했지만).
# setA = set(listA) 이런식으로 해서 for loop 내에서 if i in setA: 요런식으로.


# 그럼 내 의도대로 삭제해주려면??
# 아래처럼 enumerate를 사용하면 된다!!

for _, v in enumerate(list1):
    if v in listA:
        list1.remove(v)

print("list1:",list1) # [1, 2, 5, 6, 9]